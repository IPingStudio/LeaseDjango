[uwsgi]

# Django setting
# chdir=/www/houseDjango
# module=houseDjango.wsgi
# home=/root/.virtualenvs/leaseDjango
# master=true
# processes=10
# socket=127.0.01:8080
# chmod-socket=666
# vacuum=true

; 监听的端口
# http = :8090

; 指定和nginx进行套接字通信的方式：端口或文件
# 如果你使用了nginx，进行反向代理，请用socket参数
socket = 0.0.0.0:8090
; socket = /home/kzzf/project/OfferHelp/OfferHelp.sock
# 如果你没用nginx反向代理，想要直接访问django用这个参数
# http = 0.0.0.0:8090
; 项目所在目录，和manage.py同级
chdir = /home/chengzhouyun/www/houseDjango/houseDjango

; 虚拟环境所在目录
home=/home/chengzhouyun/.virtualenvs/leaseDjango
PYTHONHOME = /home/chengzhouyun/.virtualenvs/leaseDjango/bin/

; 主应用中的wsgi文件
wsgi-file = houseDjango/wsgi.py

; 使用路由代理静态资源，但失败了
; static-safe=/home/kzzf/project/OfferHelp/static/
; route = /static/(.*) static:/home/kzzf/project/OfferHelp/static/$1

; 代理静态资源：路径映射
# static-map = /home/chengzhouyun/www/houseDjango/static

; 启动一个master进程，来管理其余的子进程
master=True
processes = 4
threads = 2

# 最大请求大小
buffer-size = 65536
uwsgi_read_timeout = 600
harakiri = 1200
; 保存主进程的pid，用来控制uwsgi服务
pidfile=/home/chengzhouyun/www/houseDjango/houseDjango/uwsgi.pid
; 启动项目  uwsgi uwsgi.ini
; uwsgi --stop/reload xxx.pid  停止/重启uwsgi

; 设置后台运行，保存日志
daemonize=/home/chengzhouyun/www/houseDjango/houseDjango/logs/uwsgi.log
; deamonize=1  ; 用来配置background运行

; 设置每个工作进程处理请求的上限，达到上限时，将回收（重启）该进程。可以预防内存泄漏
max-requests=5000

# 服务停止时自动移除unix Socket和pid文件
vacuum=true
# 热加载
# py-autoreload = 1
